// js/modules/websocket/connection.js

import { updateClients } from '../data/clients.js';

let ws;
let reconnectInterval = 5000; // 5 —Å–µ–∫—É–Ω–¥

// ----------------------------------------------------------------------
// –ó–∞–≥–ª—É—à–∫–∞ –¥–ª—è —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö (–ò—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–µ –∫–ª—é—á–∏)
// ----------------------------------------------------------------------

const testClients = [
  { id: 'Client_001', status: 'online', loc: 'RU', user: 'admin', pc_name: 'PC-001', lastActive: '2025-04-01 10:30:00', ip: '192.168.1.100', activeWindow: 'Chrome.exe' },
  { id: 'Client_002', status: 'offline', loc: 'US', user: 'user2', pc_name: 'PC-002', lastActive: '2025-04-01 09:15:00', ip: '10.0.0.10', activeWindow: 'Explorer.exe' },
  { id: 'Client_003', status: 'online', loc: 'DE', user: 'user3', pc_name: 'PC-003', lastActive: '2025-04-01 11:45:00', ip: '172.16.0.5', activeWindow: 'VSCode.exe' },
  { id: 'Client_004', status: 'online', loc: 'GB', user: 'user4', pc_name: 'PC-004', lastActive: '2025-04-01 12:00:00', ip: '192.168.1.200', activeWindow: 'Discord.exe' },
  { id: 'Client_005', status: 'offline', loc: 'FR', user: 'user5', pc_name: 'PC-005', lastActive: '2025-04-01 08:30:00', ip: '10.10.10.10', activeWindow: 'Word.exe' },
  { id: 'Client_006', status: 'online', loc: 'JP', user: 'user6', pc_name: 'PC-006', lastActive: '2025-04-01 13:20:00', ip: '192.168.2.100', activeWindow: 'Photoshop.exe' },
  { id: 'Client_007', status: 'online', loc: 'CN', user: 'user7', pc_name: 'PC-007', lastActive: '2025-04-01 14:10:00', ip: '10.0.1.50', activeWindow: 'Excel.exe' },
  { id: 'Client_008', status: 'offline', loc: 'BR', user: 'user8', pc_name: 'PC-008', lastActive: '2025-04-01 07:45:00', ip: '172.16.1.20', activeWindow: 'PowerPoint.exe' },
  { id: 'Client_009', status: 'online', loc: 'AU', user: 'user9', pc_name: 'PC-009', lastActive: '2025-04-01 15:30:00', ip: '192.168.3.50', activeWindow: 'Teams.exe' },
  { id: 'Client_010', status: 'online', loc: 'CA', user: 'user10', pc_name: 'PC-010', lastActive: '2025-04-01 16:00:00', ip: '10.1.1.100', activeWindow: 'Slack.exe' },
];


function connectWebSocket() {
  const wsUrl = 'ws://localhost:8080/ws'; // –ó–∞–≥–ª—É—à–∫–∞
  ws = new WebSocket(wsUrl);

  ws.onopen = () => {
    console.log('WebSocket connected');
    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞ –ø–æ–ª—É—á–µ–Ω–∏–µ –∫–ª–∏–µ–Ω—Ç–æ–≤
    ws.send(JSON.stringify({ type: 'getClients' }));
  };

  ws.onmessage = (event) => {
    try {
      const data = JSON.parse(event.data);

      if (data.type === 'clientsUpdate' && Array.isArray(data.clients)) {
        // üö® –ö–†–ò–¢–ò–ß–ï–°–ö–û–ï –ò–ó–ú–ï–ù–ï–ù–ò–ï: –ò—Å–ø–æ–ª—å–∑—É–µ–º updateClients –∏–∑ –º–æ–¥—É–ª—è clients.js
        // clients.js –æ–±–Ω–æ–≤–∏—Ç –¥–∞–Ω–Ω—ã–µ –∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ—Ç–ø—Ä–∞–≤–∏—Ç —Å–æ–±—ã—Ç–∏–µ 'clientsUpdated',
        // –Ω–∞ –∫–æ—Ç–æ—Ä–æ–µ —É–∂–µ –ø–æ–¥–ø–∏—Å–∞–Ω—ã dashboard.js –∏ stats.js.
        updateClients(data.clients);
      }
      // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –æ–±—Ä–∞–±–æ—Ç–∫—É –¥—Ä—É–≥–∏—Ö —Ç–∏–ø–æ–≤ —Å–æ–æ–±—â–µ–Ω–∏–π (clientUpdate, clientRemoved, alert, etc.)

    } catch (e) {
      console.error('Error parsing WebSocket message:', e, event.data);
    }
  };

  ws.onclose = () => {
    console.log('WebSocket disconnected. Reconnecting...');
    // –ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ª–æ–≥–∏–∫—É –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —á–µ—Ä–µ–∑ AlertsManager
    setTimeout(connectWebSocket, reconnectInterval);
  };

  ws.onerror = (error) => {
    console.error('WebSocket error:', error);
    // –ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ª–æ–≥–∏–∫—É –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  };
}

// ----------------------------------------------------------------------
// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
// ----------------------------------------------------------------------

document.addEventListener('DOMContentLoaded', () => {
  // üö® –ö–†–ò–¢–ò–ß–ï–°–ö–û–ï –ò–ó–ú–ï–ù–ï–ù–ò–ï: –ó–∞–≥—Ä—É–∂–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ —á–µ—Ä–µ–∑ updateClients
  // –≠—Ç–æ –≥–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ—Ç, —á—Ç–æ –¥–∞–Ω–Ω—ã–µ –±—É–¥—É—Ç –æ–±—Ä–∞–±–æ—Ç–∞–Ω—ã –∏ —Å–æ–±—ã—Ç–∏–µ 'clientsUpdated' –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ.
  updateClients(testClients);

  connectWebSocket();
});

// –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏—é, –µ—Å–ª–∏ –æ–Ω–∞ –Ω—É–∂–Ω–∞ –¥—Ä—É–≥–∏–º –º–æ–¥—É–ª—è–º –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –∫–æ–º–∞–Ω–¥
export { connectWebSocket, ws };